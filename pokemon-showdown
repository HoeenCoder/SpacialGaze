#!/usr/bin/env node
'use strict';

const child_process = require('child_process');

// Make sure we're Node 6+

try {
	eval('{ let [a] = [1]; }');
} catch (e) {
	console.log("We require Node.js v6 or later; you're using " + process.version);
	process.exit();
}

// Make sure our dependencies are available, and install them if they
// aren't

try {
	require.resolve('sockjs');
} catch (e) {
	console.log('Installing dependencies...');
	child_process.execSync('npm install --production', {stdio: 'inherit'});
}

// Start the server. We manually load app.js so it can be configured to run as
// the main module, rather than this file being considered the main module.
// This ensures any dependencies that were just installed can be found when
// running on Windows and avoids any other potential side effects of the main
// module not being app.js like it is assumed to be.
//
// The port the server should host on can be passed using the second argument
// when launching with this file the same way app.js normally allows, e.g. to
// host on port 9000:
// $ ./pokemon-showdown 9000

require('module')._load('./app', module, true);
